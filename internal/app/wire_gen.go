// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"ex-go/internal/domain/service"
	"ex-go/internal/http/handle"
	"ex-go/internal/http/route"
	"ex-go/internal/repository/cache"
	"ex-go/internal/repository/db"
)

// Injectors from wire.go:

func InitServer() (*App, func(), error) {
	gormDB, cleanup, err := InitDB()
	if err != nil {
		return nil, nil, err
	}
	userRepository := &db.UserRepository{
		DB: gormDB,
	}
	client, cleanup2, err := InitCache()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	userCacheRepository := &cache.UserCacheRepository{
		Cache: client,
	}
	userService := &service.UserService{
		UserRepo:      userRepository,
		UserCacheRepo: userCacheRepository,
	}
	userHandle := &handle.UserHandle{
		UserService: userService,
	}
	router := &route.Router{
		User: userHandle,
	}
	engine := route.InitEngine(router)
	app := &App{
		Engine: engine,
	}
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}
